#Copyright (C) 2011 by Dakai Liu
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in
#all copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#THE SOFTWARE.
#
#grammar
start	<- MAGIC COMMENT* EOL* SPACE* OBJ+ DELIM XREF DELIM TRAILER STARTXREF GOBBLE
DICT	<- DB (DELIM KEY DELIM(VALUE / KWORD / ID))* DE DELIM
DB      <- '<<' DELIM {fprintf(stdout, "dictbegin\n");}
DE	<- '>>' DELIM {fprintf(stdout, "dictend\n");}
KEY	<- '/' [a-zA-Z0-9._] [a-zA-Z0-9+_,.\-]* DELIM
VALUE	<- (
	   REF
	   / NNUM
	   / NUM
	   / KEY
	   / DICT
	   / ARRAY
	   / STRING
	   / HEXSTR
	   / KWORD
	   ) DELIM {printf("value\n");}
ARRAY	   <- '[' DELIM (VALUE)* ']' DELIM { printf("array..\n"); }

STRING     <- STRBGN  STRBODY* STREND { printf("string..\n"); }
STRBODY	   <- (
	      STRING
	      / (ESCPAREN / (!STRBGN !STREND .))
	      )

HEXSTR	   <- '<' [0-9a-fA-F\n\r]* '>' DELIM

OBJ	<- [-]? [0-9]+ ' ' [0-9]+ ' '  'obj' DELIM   { printf("objbegin..\n"); }
	(REF 
	/ DICT 
	/ NUM 
	/ ARRAY
	/ KEY
	/ STRING
	)* DELIM
	(STREAM)*
	'endobj' DELIM { printf("objend..\n"); }

STREAM   <- 'stream'EOL* (!'endstream' .)* 'endstream' DELIM {printf("stream...\n");}

REF	 <- NUM NUM 'R' DELIM { printf("ref..\n"); }
XREF	 <- 'xref' DELIM {printf("xref...%s", yytext); }
	 POSITIVE 
	 POSITIVE {xref_new(atoi(yytext));}
	 DELIM
	 XREFTAB*  
XREFTAB	 <- NUM { g_xref_off = atoi(yytext); } 
	 NUM { g_xref_gen = atoi(yytext); }
	 ('n'/'f') {xref_add(g_xref_off, g_xref_gen, yytext[0]);}
	 DELIM 


TRAILER	 <- 'trailer' DELIM DICT DELIM {printf(" trailer...\n");}
STARTXREF   <- 'startxref' DELIM NUM DELIM
GOBBLE	    <- .*
POSITIVE    <- < [0-9]+ > SPACE*
NUM	<- < [-]?[0-9]+ > DELIM
NNUM	<- [-]?[0-9.]+ DELIM
ALPHA   <- [a-zA-Z_]
ALPHANUM <- [a-zA-Z0-9+_,./:\-] 

MAGIC	   <- '%'+[pP][dD][fF] (!EOL .)* EOL {printf("start PDF...\n");}
COMMENT <-'%'+ (!EOL .)* EOL
SPACE   <- [ \t]
EOL     <- '\n' / '\r\n' / '\r'
DELIM	<- (SPACE / EOL)*
STRBGN  <- '('
STREND	<- ')'
ESCPAREN   <- (
	      '\\' '('
	      / '\\' ')'
	      )
KWORD	<- ( 'false' / 'true' / 'null') DELIM
ID	<- (!SPACE !EOL .)* DELIM